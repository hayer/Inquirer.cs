name: .NET

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
      nugetVerV2: ${{ steps.gitverion.outputs.nuGetVersionV2 }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.9
      with:
        versionSpec: '5.x.x'
    - name: Determine Version
      id: gv
      uses: gittools/actions/gitversion/execute@v0.9.9
      with:
        useConfigFile: true
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
    
    - name: Display GitVersion outputs
      run: |
        echo "Test1: $GITVERSION_SEMVER"
        echo "Test2: $GITVERSION_NUGETVERSIONV2"
        echo "Major: ${{ steps.gv.outputs.major }}"
        echo "Minor: ${{ steps.gv.outputs.minor }}"
        echo "Patch: ${{ steps.gv.outputs.patch }}"
        echo "PreReleaseTag: ${{ steps.gv.outputs.preReleaseTag }}"
        echo "PreReleaseTagWithDash: ${{ steps.gv.outputs.preReleaseTagWithDash }}"
        echo "PreReleaseLabel: ${{ steps.gv.outputs.preReleaseLabel }}"
        echo "PreReleaseNumber: ${{ steps.gv.outputs.preReleaseNumber }}"
        echo "WeightedPreReleaseNumber: ${{ steps.gv.outputs.weightedPreReleaseNumber }}"
        echo "BuildMetaData: ${{ steps.gv.outputs.buildMetaData }}"
        echo "BuildMetaDataPadded: ${{ steps.gv.outputs.buildMetaDataPadded }}"
        echo "FullBuildMetaData: ${{ steps.gv.outputs.fullBuildMetaData }}"
        echo "MajorMinorPatch: ${{ steps.gv.outputs.majorMinorPatch }}"
        echo "SemVer: ${{ steps.gv.outputs.semVer }}"
        echo "LegacySemVer: ${{ steps.gv.outputs.legacySemVer }}"
        echo "LegacySemVerPadded: ${{ steps.gv.outputs.legacySemVerPadded }}"
        echo "AssemblySemVer: ${{ steps.gv.outputs.assemblySemVer }}"
        echo "AssemblySemFileVer: ${{ steps.gv.outputs.assemblySemFileVer }}"
        echo "FullSemVer: ${{ steps.gv.outputs.fullSemVer }}"
        echo "InformationalVersion: ${{ steps.gv.outputs.informationalVersion }}"
        echo "BranchName: ${{ steps.gv.outputs.branchName }}"
        echo "EscapedBranchName: ${{ steps.gv.outputs.escapedBranchName }}"
        echo "Sha: ${{ steps.gv.outputs.sha }}"
        echo "ShortSha: ${{ steps.gv.outputs.shortSha }}"
        echo "NuGetVersionV2: ${{ steps.gv.outputs.nuGetVersionV2 }}"
        echo "NuGetVersion: ${{ steps.gv.outputs.nuGetVersion }}"
        echo "NuGetPreReleaseTagV2: ${{ steps.gv.outputs.nuGetPreReleaseTagV2 }}"
        echo "NuGetPreReleaseTag: ${{ steps.gv.outputs.nuGetPreReleaseTag }}"
        echo "VersionSourceSha: ${{ steps.gv.outputs.versionSourceSha }}"
        echo "CommitsSinceVersionSource: ${{ steps.gv.outputs.commitsSinceVersionSource }}"
        echo "CommitsSinceVersionSourcePadded: ${{ steps.gv.outputs.commitsSinceVersionSourcePadded }}"
        echo "UncommittedChanges: ${{ steps.gv.outputs.uncommittedChanges }}"
        echo "CommitDate: ${{ steps.gv.outputs.commitDate }}"

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore -c release -p:Version=${{ steps.gv.outputs.semVer }}
    - name: Test
      run: dotnet test --no-build -c release --verbosity normal
    - name: Pack
      run: dotnet pack --no-build -c release --verbosity normal -p:PackageVersion=${{ steps.gv.outputs.nuGetVersionV2 }}
    - name: Upload to feed
      uses: actions/upload-artifact@v2
      with:
        name: phu.Inquirer.cs
        path: Inquirer.cs/Inquirer.cs/src/Inquirer/bin/Release/phu.Inquirer.cs.${{ steps.gv.outputs.nuGetVersionV2 }}.nupkg
